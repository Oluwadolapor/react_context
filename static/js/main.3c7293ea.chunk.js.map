{"version":3,"sources":["context/TaskListContext.js","components/Task.js","components/TaskList.js","components/TaskForm.js","components/Header.js","App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","intialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","editItem","setEditItem","useEffect","setItem","stringify","Provider","value","addTask","title","id","uuidv4","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","children","Task","useContext","className","onClick","TaskList","length","key","TaskForm","setTitle","onSubmit","e","preventDefault","type","onChange","target","placeholder","Header","App","ReactDOM","render","document","getElementById"],"mappings":"6PAEaA,EAAkBC,0BA8ChBC,EA3CiB,SAACC,GAE7B,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GAF1B,EAIZC,mBAASL,GAJG,mBAIhCM,EAJgC,KAIzBC,EAJyB,OAMPF,mBAAS,MANF,mBAMhCG,EANgC,KAMtBC,EANsB,KAQvCC,qBAAU,WACNP,aAAaQ,QAAQ,QAASV,KAAKW,UAAUN,MAC9C,CAACA,IAyBJ,OACQ,kBAACV,EAAgBiB,SAAjB,CACAC,MAAO,CAACR,QAAOS,QAzBN,SAAAC,GACbT,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAACU,QAAOC,GAAIC,mBAwBJC,WArBb,SAAAF,GACfV,EAASD,EAAMc,QAAO,SAAAC,GAAI,OAAIA,EAAKJ,KAAOA,OAoBFK,UAjB1B,WACdf,EAAS,KAgB0CgB,SAbtC,SAAAN,GACb,IAAMO,EAAOlB,EAAMmB,MAAK,SAAAJ,GAAI,OAAIA,EAAKJ,KAAOA,KAC5CR,EAAYe,IAWiDhB,WAAUkB,SAR1D,SAACV,EAAOC,GACrB,IAAMU,EAAWrB,EAAMsB,KAAI,SAAAP,GAAI,OAC1BA,EAAKJ,KAAOA,EAAK,CAACD,QAAOC,MAAMI,KACpCd,EAASoB,GACTlB,EAAY,SAKHV,EAAM8B,WCnBRC,EApBF,SAAC,GAAY,IAAXT,EAAU,EAAVA,KAAU,EACYU,qBAAWnC,GAApCuB,EADa,EACbA,WAAYI,EADC,EACDA,SAEpB,OACA,wBAAIS,UAAU,aACV,8BAAOX,EAAKL,OACZ,6BACI,4BAAQiB,QAAS,kBAAMd,EAAWE,EAAKJ,KAAIe,UAAU,uBACjD,uBAAGA,UAAU,sBAEjB,4BACAC,QAAS,kBAAMV,EAASF,EAAKJ,KAC7Be,UAAU,qBACN,uBAAGA,UAAU,mBCMdE,EAnBE,WAAO,IACZ5B,EAAUyB,qBAAWnC,GAArBU,MACR,OACI,6BAEQA,EAAM6B,OACF,wBAAIH,UAAU,QACZ1B,EAAMsB,KAAI,SAAAtB,GACR,OAAO,kBAAC,EAAD,CAAMe,KAAMf,EAAO8B,IAAK9B,EAAMW,SAIzC,yBAAKe,UAAU,YAAf,cC0CLK,EAtDE,WAAO,IAAD,EAC8BN,qBAAWnC,GAArDmB,EADY,EACZA,QAASO,EADG,EACHA,UAAWd,EADR,EACQA,SAAUkB,EADlB,EACkBA,SADlB,EAEOrB,mBAAS,IAFhB,mBAEZW,EAFY,KAELsB,EAFK,KA2BnB,OARA5B,qBAAU,WAEF4B,EADD9B,EACUA,EAASQ,MAET,MAEd,CAACR,IAGA,0BAAM+B,SAxBW,SAAAC,GACjBA,EAAEC,iBACGjC,EAIDkB,EAASV,EAAOR,EAASS,KAHzBF,EAAQC,GACRsB,EAAS,MAoBiBN,UAAU,QACpC,2BAAOU,KAAK,OACZC,SAfa,SAAAH,GACjBF,EAASE,EAAEI,OAAO9B,QAedkB,UAAU,aACVa,YAAY,WACZ/B,MAAOE,IAEP,yBAAKgB,UAAU,WACX,4BACAU,KAAK,SACLV,UAAU,oBACLxB,EAAW,SAAU,YAG1B,4BACAyB,QAASX,EACTU,UAAU,iBAFV,YCpCDc,EARC,WACZ,OACI,yBAAKd,UAAU,UACX,oD,MCmBGe,MAjBf,WACE,OACE,kBAAC,EAAD,KACE,yBAAKf,UAAU,aACb,yBAAKA,UAAU,eACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACd,kBAAC,EAAD,MACA,kBAAC,EAAD,WCTXgB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3c7293ea.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport {v4 as uuidv4 } from 'uuid';\r\nexport const TaskListContext = createContext();\r\n\r\n\r\nconst TaskListContextProvider = (props) => {\r\n\r\n    const intialState = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n    \r\n    const [tasks, setTasks] =  useState(intialState);\r\n\r\n    const [editItem, setEditItem] = useState(null);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n    }, [tasks]);\r\n\r\n     const addTask = title => {\r\n        setTasks([...tasks, {title, id: uuidv4()}])\r\n    };\r\n\r\n    const removeTask = id => {\r\n        setTasks(tasks.filter(task => task.id !== id));\r\n    }\r\n\r\n    const clearList = () => {\r\n        setTasks([]);\r\n    }\r\n\r\n    const findItem = id => {\r\n        const item = tasks.find(task => task.id === id);\r\n        setEditItem(item);        \r\n    }\r\n\r\n    const editTask = (title, id) => {\r\n        const newTasks = tasks.map(task => \r\n            (task.id === id ? {title, id} : task));\r\n        setTasks(newTasks);\r\n        setEditItem(null)\r\n    }\r\n    return(\r\n            <TaskListContext.Provider \r\n            value={{tasks, addTask, removeTask, clearList, findItem, editItem, editTask}}>\r\n                {props.children}\r\n            </TaskListContext.Provider>\r\n        )\r\n}\r\n\r\nexport default TaskListContextProvider;","import React, {useContext} from 'react'\r\nimport { TaskListContext } from \"../context/TaskListContext\";\r\n\r\n\r\nconst Task = ({task}) => {\r\n    const { removeTask, findItem } = useContext(TaskListContext);\r\n\r\n    return (\r\n    <li className=\"list-item\">\r\n        <span>{task.title}</span>\r\n        <div>\r\n            <button onClick={() => removeTask(task.id)}className=\"btn-delete task-btn\">\r\n                <i className=\"fas fa-trash-alt\"></i>\r\n            </button>\r\n            <button \r\n            onClick={() => findItem(task.id)}\r\n            className=\"btn-edit task-btn\">\r\n                <i className=\"fas fa-pen\"></i>\r\n            </button>\r\n\r\n        </div>\r\n    </li>)\r\n}\r\n\r\nexport default Task\r\n","import React, { useContext } from 'react'\r\nimport {TaskListContext} from '../context/TaskListContext';\r\nimport Task from './Task';\r\n\r\nconst TaskList = () => {\r\n    const { tasks } = useContext(TaskListContext);\r\n    return (\r\n        <div>\r\n            {\r\n                tasks.length ? (\r\n                    <ul className=\"list\">\r\n                     {tasks.map(tasks => { \r\n                        return <Task task={tasks} key={tasks.id}/>\r\n                     })}\r\n            </ul> \r\n                ) : (\r\n                    <div className=\"no-tasks\">No tasks</div>\r\n                )}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskList; ","import React, {useContext, useState, useEffect} from 'react'\r\nimport {TaskListContext} from '../context/TaskListContext'\r\n\r\n\r\nconst TaskForm = () => {\r\n    const {addTask, clearList, editItem, editTask} = useContext(TaskListContext);\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (!editItem) {\r\n            addTask(title);\r\n            setTitle(\"\")\r\n        } else {\r\n            editTask(title, editItem.id);            \r\n        }\r\n        \r\n    };\r\n\r\n    const handleChange = e => {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(editItem) {\r\n            setTitle(editItem.title);\r\n        } else {\r\n            setTitle(\"\");\r\n        }\r\n    }, [editItem]);\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"form\">\r\n            <input type=\"text\" \r\n            onChange={handleChange}\r\n            className=\"task-input\"\r\n            placeholder=\"Add Task\" \r\n            value={title} />\r\n\r\n            <div className=\"buttons\">\r\n                <button \r\n                type=\"submit\" \r\n                className=\"btn add-task-btn\">\r\n                    {editItem ? \"Finish\": \"Add Task\"}\r\n                </button> \r\n\r\n                <button \r\n                onClick={clearList}\r\n                className=\"btn clear-btn\">\r\n                    Clear\r\n                </button>    \r\n\r\n            </div>\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nexport default TaskForm\r\n","import React from 'react'\r\n\r\n const Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Handling Inventory</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\nimport TaskList from './components/TaskList'\nimport TaskForm from './components/TaskForm'\nimport Header from \"./components/Header\";\nimport TaskListContextProvider from './context/TaskListContext'\nimport './App.css';\n\nfunction App() {\n  return (\n    <TaskListContextProvider>\n      <div className=\"container\">\n        <div className=\"app-wrapper\">\n          <Header />\n          <div className=\"main\">   \n           <TaskForm />\n           <TaskList />\n          </div>\n        </div>\n      </div> \n    </TaskListContextProvider>\n    \n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}